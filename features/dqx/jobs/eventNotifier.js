/********************************************************************
 *  DQX ÈÅãÂñ∂„Ç§„Éô„É≥„ÉàÈÄöÁü•  ‚îÄ „Çπ„ÇØ„É¨„Ç§„Éî„É≥„Ç∞ + ÊäïÁ•® + „Ç´„Ç¶„É≥„Éà„ÉÄ„Ç¶„É≥Âº∑Ë™øÁâà
 *******************************************************************/
const fetch   = require('node-fetch'); // v2
const cheerio = require('cheerio');
const cron    = require('node-cron');
const { EmbedBuilder, ChannelType } = require('discord.js');

const PAGE_URL = 'https://hiroba.dqx.jp/sc/news/information/';
const KEYWORDS = ['„Ç§„Éô„É≥„Éà', '„Ç≥„É©„Éú', '„Ç∞„É©„É≥„Éó„É™', 'Â§ßÂØåË±™', 'Ë®òÂøµ', '„Éï„Çß„Çπ', 'Â†±ÈÖ¨'];

let latestURL = null;

/* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ HTML Ëß£Êûê ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
async function scrapeNews() {
  const html = await fetch(PAGE_URL, { headers: { 'User-Agent': 'Mozilla/5.0' } })
                     .then(r => r.text());

  const $ = cheerio.load(html);

  return $('a.newsListLnk').map((_, a) => {
    const $a = $(a);
    const $tr = $a.closest('tr');
    const date = $tr.find('td.date div').text().trim();

    return {
      url: 'https://hiroba.dqx.jp' + $a.attr('href'),
      date,
      title: $a.text().trim()
    };
  }).get();
}

/* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ „Éï„Ç£„É´„Çø ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
function pickLatestEvent(items) {
  return items.find(item =>
    KEYWORDS.some(k => item.title.includes(k)) &&
    item.url !== latestURL
  );
}

/* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ „Ç§„Éô„É≥„Éà„Ç∏„É£„É≥„É´ ‚Üí „Ç¢„Ç§„Ç≥„É≥ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
function getEventIcon(title) {
  if (title.includes('„Ç≥„É©„Éú')) return 'ü§ù';
  if (title.includes('„Éï„Çß„Çπ')) return 'üéä';
  if (title.includes('„Ç∞„É©„É≥„Éó„É™')) return 'üèÜ';
  if (title.includes('ÂÜôÁúü')) return 'üì∏';
  if (title.includes('Ë®òÂøµ')) return 'üéÇ';
  return 'üì¢';
}

/* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ ÈÄöÁü•Âá¶ÁêÜ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
async function notifyEvent(client, channelId) {
  const items = await scrapeNews();
  const target = pickLatestEvent(items);

  const ch = await client.channels.fetch(channelId).catch(() => null);
  if (!ch || ch.type !== ChannelType.GuildText) return;

  const mentionRoleId = process.env.MENTION_ROLE_ID;
  const mention = mentionRoleId ? `<@&${mentionRoleId}>` : '';

  if (!target) {
    await ch.send(`${mention}\nüì≠ ÁèæÂú®„ÄÅË©≤ÂΩì„Åô„ÇãÈÅãÂñ∂„Ç§„Éô„É≥„ÉàÊÉÖÂ†±„ÅØË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì„Åß„Åó„Åü„ÄÇ`);
    return;
  }

  const eventIcon = getEventIcon(target.title);

  const remainDays = (() => {
    const diff = new Date(target.date) - Date.now();
    return diff > 0 ? Math.ceil(diff / (1000 * 60 * 60 * 24)) : 0;
  })();

  const embed = new EmbedBuilder()
    .setColor(0xf48fb1)
    .setTitle(`${eventIcon} „Äê„Ç§„Éô„É≥„Éà„Äë${target.title}`)
    .setURL(target.url)
    .setDescription(`üéâ **„ÉØ„ÇØ„ÉØ„ÇØÔºÅÊñ∞„Åó„ÅÑÂÖ¨Âºè„Ç§„Éô„É≥„ÉàÊÉÖÂ†±„ÅåÁôªÂ†¥ÔºÅ**\n„Åï„Å£„Åù„Åè„ÉÅ„Çß„ÉÉ„ÇØ„Åó„Å¶„Åø„Çà„ÅÜÔºÅ`)
    .addFields(
      { name: 'üìÖ ÂÖ¨ÈñãÊó•', value: target.date, inline: true },
      { name: 'üè∑ „Ç´„ÉÜ„Ç¥„É™', value: 'ÈÅãÂñ∂„Ç§„Éô„É≥„Éà', inline: true }
    )
    .addFields({ name: '‚è≥ „Ç´„Ç¶„É≥„Éà„ÉÄ„Ç¶„É≥', value: `‚ú® „ÅÇ„Å® **${remainDays}Êó•**ÔºÅÔºÅ ‚ú®` })
    .setFooter({ text: 'ÁõÆË¶ö„ÇÅ„ÅóÂÜíÈô∫ËÄÖ„ÅÆÂ∫ÉÂ†¥', iconURL: client.user.displayAvatarURL() })
    .setTimestamp();

  if (mention) await ch.send(mention);
  const msg = await ch.send({ embeds: [embed] });

  // „É™„Ç¢„ÇØ„Ç∑„Éß„É≥ÊäïÁ•®
  await msg.react('üôå'); // ÂèÇÂä†„Åô„ÇãÔºÅ
  await msg.react('üëÄ'); // ÊßòÂ≠êË¶ã
  await msg.react('üò∂'); // „Çπ„É´„Éº

  latestURL = target.url;
}

/* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ cron ÁôªÈå≤ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
module.exports = (client) => {
  const chId = process.env.DQ_EVENT_CHANNEL_ID;
  if (!chId) {
    console.warn('‚ùó DQ_EVENT_CHANNEL_ID „Åå .env „Å´Ë®≠ÂÆö„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì');
    return;
  }

  // ÊØéÊúù6ÊôÇ„Å´ÈÄöÁü•
  cron.schedule('0 6 * * *', () => notifyEvent(client, chId), {
    timezone: 'Asia/Tokyo',
  });

  // Ëµ∑ÂãïÊôÇ„ÉÜ„Çπ„Éà„É¢„Éº„Éâ
  if (process.env.DQ_EVENT_TEST === 'true') {
    notifyEvent(client, chId);
  }
};

module.exports.notifyEvent = notifyEvent;

/* ============================================================
 * ‰æùÂ≠ò: npm i node-fetch@2 cheerio node-cron
 * ============================================================ */
